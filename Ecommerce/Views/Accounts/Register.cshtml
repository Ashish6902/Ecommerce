@model Ecommerce.Logins

@{
    ViewBag.Title = "Register";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <title>@ViewBag.Title</title>
    <style>
        body {
            background-color: #393646; /* Background color */
        }

        .container {
            margin-top: 50px;
        }

        .form-horizontal {
            background-color: #6D5D6E; /* Form background color */
            color: #F4EEE0; /* Text color inside the form */
            padding: 20px;
            border-radius: 10px;
        }

        .form-control {
            background-color: #4F4557; /* Input background color */
            color: #F4EEE0; /* Text color inside the input */
            width: 100%; /* Adjust the width as needed */
        }

        .btn-default {
            background-color: #393646; /* Create button background color */
            border-color: #393646; /* Create button border color */
            color: #F4EEE0; /* Text color on the create button */
        }
        btn-secondary {
            background-color: #393646; /* Create button background color */
            border-color: #393646; /* Create button border color */
            color: #F4EEE0; /* Text color on the create button */
        }

        .btn-default:hover {
            background-color: #6D5D6E; /* Hover color for the create button */
            border-color: #6D5D6E;
        }

        .btn-link {
            color: #4F4557; /* Link color to go back to list */
        }
    </style>

</head>
<body>
    <div class="container">
        <h2>Register</h2>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
             <div class="form-horizontal">


                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HashedPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HashedPassword, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.HashedPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.UserAddress, new { htmlAttributes = new { @class = "form-control", @required = "required", @cols = 100 } })
                        @Html.ValidationMessageFor(model => model.UserAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
        <br />
        <div>
            @Html.ActionLink("Login", "Login", "Account", new { @class = "btn btn-secondary" })
        </div>
    </div>
            
        }


    </div>
</body>
</html>
